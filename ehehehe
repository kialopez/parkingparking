using System;
using System.Collections.Generic;

// Enum definitions...

// Spot, Vehicle, and derived classes...

// Row and Level classes...

// ParkingLot class...

class Program
{
    static void Main(string[] args)
    {
        // Parking lot creation and user input for number of levels, rows, spots per row...

        ParkingLot parkingLot = new ParkingLot(numberOfLevels, numberOfRows, spotsPerRow);

        // Simulate parking a vehicle
        Console.WriteLine("Enter the type of vehicle (Car, Truck, Motorcycle):");
        string vehicleTypeInput = Console.ReadLine();
        VehicleType vehicleType;
        Enum.TryParse(vehicleTypeInput, out vehicleType);

        switch (vehicleType)
        {
            case VehicleType.Car:
                Console.WriteLine("Enter the license plate of the car:");
                string licensePlate = Console.ReadLine();
                if (!parkingLot.IsLicensePlateUnique(licensePlate))
                {
                    Console.WriteLine("This license plate is already in use. Please enter a unique license plate.");
                    return;
                }
                Car car = new Car(licensePlate);
                Spot spot = parkingLot.FindSpot(car);
                if (spot != null)
                {
                    Console.WriteLine("Spot found!");
                    car.Park();
                    spot.IsAvailable = false;
                }
                else
                {
                    Console.WriteLine("No available spot for the car.");
                }
                break;
            case VehicleType.Truck:
                Truck truck = new Truck();
                spot = parkingLot.FindSpot(truck);
                if (spot != null)
                {
                    Console.WriteLine("Spot found!");
                    truck.Park();
                    spot.IsAvailable = false;
                }
                else
                {
                    Console.WriteLine("No available spot for the truck.");
                }
                break;
            case VehicleType.Motorcycle:
                Motorcycle motorcycle = new Motorcycle();
                spot = parkingLot.FindSpot(motorcycle);
                if (spot != null)
                {
                    Console.WriteLine("Spot found!");
                    motorcycle.Park();
                    spot.IsAvailable = false;
                }
                else
                {
                    Console.WriteLine("No available spot for the motorcycle.");
                }
                break;
            default:
                Console.WriteLine("Invalid vehicle type!");
                break;
        }
    }
}
